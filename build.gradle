plugins {
    id "java"
    id "io.franzbecker.gradle-lombok" version "1.14"
}

group "net.daporkchop"
version "0.1.9-SNAPSHOT"

/*
 * Adapted from The MIT License (MIT)
 *
 * Copyright (c) 2018-2020 DaPorkchop_
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * Any persons and/or organizations using this software must include the above copyright notice and this permission notice,
 * provide sufficient credit to the original authors of the project (IE: DaPorkchop_), as well as provide a link to the original project.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven {
        name = "DaPorkchop_"
        url = "https://maven.daporkchop.net/"
    }
    mavenCentral()
}

ext {
    gsonVersion = "2.8.5"
    junitVersion = "4.12"
    nettyVersion = "4.1.36.Final"
    porklibVersion = "0.5.0-SNAPSHOT"
}

dependencies {
    compile "net.daporkchop.lib:binary:$porklibVersion"
    compile "net.daporkchop.lib:encoding:$porklibVersion"
    compile "net.daporkchop.lib:logging:$porklibVersion"
    compile "net.daporkchop.lib:minecraft:$porklibVersion"
    compile "net.daporkchop.lib:primitive:$porklibVersion"

    compile "io.netty:netty-buffer:$nettyVersion"

    compile "com.google.code.gson:gson:$gsonVersion"

    testCompile "junit:junit:$junitVersion"
}

jar {
    from {
        configurations.compile.collect {
            zipTree(it)
        }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
        attributes "Implementation-Title": "DaPorkchop_ok",
                "Implementation-Version": version,
                "Main-Class": "net.daporkchop.regionmerger.RegionMerger"
    }
}
